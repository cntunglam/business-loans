name: DEV - DigitalOcean - Build and Deploy Frontend
on:
  push:
    branches:
      - "main"

jobs:
  build-and-deploy:
    name: "Build and Deploy Services"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate Build Environment Variables
        run: |
          echo "DO_USERNAME=caongoctunglam@gmail.com" >> $GITHUB_ENV
          echo "DO_TOKEN=dop_v1_fd02135c3d2ecc53eaa96236026db51ce518dacf8dab03baaf388a8ec11898b3" >> $GITHUB_ENV
          echo "DOCR_REGISTRY=registry.digitalocean.com" >> $GITHUB_ENV
          echo "DOCR_REPO=lamcao/roshi-vn-fe-dev" >> $GITHUB_ENV
          echo "DOCR_TAG=v1" >> $GITHUB_ENV

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCR_REGISTRY }}
          username: ${{ env.DO_USERNAME }}
          password: ${{ env.DO_TOKEN }}

      - name: Build and Push Frontend to DOCR
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.DOCR_REGISTRY }}/${{ env.DOCR_REPO }}:${{ env.DOCR_TAG }}
          file: frontend.Dockerfile

  verify-deployment:
    name: "Verify Deployment"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: build-and-deploy
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate Build Environment Variables
        run: |
          echo "DO_TOKEN=dop_v1_fd02135c3d2ecc53eaa96236026db51ce518dacf8dab03baaf388a8ec11898b3" >> $GITHUB_ENV

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ env.DO_TOKEN }}

      - name: Update doctl
        run: doctl version

      - name: Verify Frontend Deployment
        run: |
          chmod +x verify_deployment.sh
          for i in $(seq 1 3); do
            ./verify_deployment.sh f924155c-8392-42df-a3e0-b94b3f63de37 Frontend
            if [ $? -eq 0 ]; then
              echo "Frontend deployment verification successful"
              break
            else
              echo "Attempt $i failed. Retrying..."
              sleep 60
            fi
          done
          if [ $? -ne 0 ]; then
            echo "Frontend deployment verification failed after multiple retries."
            exit 1
          fi
